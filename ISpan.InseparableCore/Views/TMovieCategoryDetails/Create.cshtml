@model ISpan.InseparableCore.ViewModels.MovieCategoryDetailCreateVm

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>TMovieCategoryDetails</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" id="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="FMovieId" class="control-label"></label>
                <select asp-for="FMovieId" class ="form-control" asp-items="ViewBag.FMovieId" id="FMovieId"></select>
            </div>
            <div class="form-group">
                <label asp-for="CategoryIds" class="control-label"></label>
				<select id="FMovieCategoryId" class="form-control" asp-items="ViewBag.FMovieCategoryId" multiple></select>
            </div>
			<input type="hidden" asp-for="CategoryIds" id="CategoryIds"/>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
		</form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>

<script>
	var categoryIds = "";

	$("#Create").submit(function () {
		$("#FMovieCategoryId").find(":selected").each(function () {
			categoryIds += this.value + ',';
		});
		$("#CategoryIds").val(categoryIds);
		alert($("#CategoryIds").val())
	})

</script>

@section Scripts {
	@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
