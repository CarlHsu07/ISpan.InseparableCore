@model ISpan.InseparableCore.ViewModels.ArticleVm
<style>
	.btnEditComment {
	}

	.btnCommentCancel {
	}

	.displayNone {
		display: none;
	}

	.divComment {
		margin: 5px;
		font-size: 20px;
	}

	.divArticle {
		font-size: 30px;
		text-align: justify;
	}

	pre {
		white-space: pre-wrap;
		word-wrap: break-word;
	}

	.divContainerRow {
		display: flex;
		flex-direction: row;
		padding: 5px;
	}

		.divContainerRow span {
			display: flex;
			flex-direction: column;
			padding: 5px;
			margin: 0;
		}

			.divContainerRow span span {
				display: inline;
				flex-direction: column;
				padding: 0px;
				margin: 0;
			}

	.divBorder {
		border-color: white;
		border-width: 1px;
		border-style: solid;
		border-radius:9px;
	}

	.divBlock {
		margin: 20px
	}

	.inDivPosition {
		position: relative;
		bottom: 0px;
		right: -200px;
	}
</style>
<div class="">
	<div class="divContainerRow " style="">
		<span class=" " style="width:100px">
			<p>
				@Html.DisplayNameFor(model => model.ArticleCategory):
				@Model.ArticleCategory
			</p>
		</span>
		<span class=" " style="width:125px">
			<p>
				@Html.DisplayNameFor(model => model.MemberName):
				@Html.DisplayFor(model => model.MemberName)
			</p>
		</span>
		<span class=" " style="width:200px">
			<p>
				@Html.DisplayNameFor(model => model.FMemberId):
				@Html.DisplayFor(model => model.FMemberId)
			</p>
		</span>
		<span class=" " style="width:250px">
			<p>
				@Html.DisplayNameFor(model => model.PostingDate):
				@Html.DisplayFor(model => model.PostingDate)
			</p>
		</span>
		<span class=" " style="width:250px">
			<p>
				@Html.DisplayNameFor(model => model.ModifiedDate):
				@Html.DisplayFor(model => model.ModifiedDate)
			</p>
		</span>
		<span class=" " style="width:150px">
			<p>
				@Html.DisplayNameFor(model => model.FArticleLikes):
				<span id="spanLikes">@Html.DisplayFor(model => model.FArticleLikes)</span>
				@if (Model.LikeOrUnlike == true)
				{
					<button type="button" id="btnArticleLike" class="btn btn-primary">讚</button>
				}
				else
				{
					<button type="button" id="btnArticleLike" class="btn btn-secondary">讚</button>
				}
			</p>
		</span>
		<span class="" style="width:100px">
			<p>
				@Html.DisplayNameFor(model => model.FArticleClicks):
				@Html.DisplayFor(model => model.FArticleClicks)
			</p>
		</span>
		<span>
			<a href="/TMovies/Edit/@Model.FArticleId" class="btn btn-warning">編輯</a>
		</span>
		<span>
			<button type="button" class="btn btn-info"  onclick="backToIndex()">
				返回
			</button>
		</span>
	</div>
	<h1 style="margin-top:20px">@Html.DisplayFor(model => model.FArticleTitle)</h1>
	<hr />
</div>
<div>
	<pre class="divArticle">@Html.DisplayFor(model => model.FArticleContent)</pre>
</div>
<div class="divContainerRow">
	<div class="input-group">
		<textarea class="form-control" id="FCommentContent" aria-label="With textarea"></textarea>
	</div>
	<div>
		<button type="button" id="btnComment" class="btn btn-secondary" value="0">留言</button>
	</div>
</div>
<div id="divComment"></div>

@section Scripts{
	<script>
		//返回
		function backToIndex() { window.location.href = "/TArticles/Index" }

		//送出評論及展示評論ajax函數
		function CommentDetail(FCommentId, FArticleId, FCommentContent, FDeleted) {
			$.ajax({
				method: "post",
				url: "/TComments/ArticleComment",
				data: { FCommentId, FArticleId, FCommentContent, FDeleted },
				success: function (data) {
					let context = JSON.parse(data);
					//alert(data)
					let UserId = context.UserId
					$("#divComment").html("")
					$.each(context.Vm, function (index, value) {
						if (value.FMemberId == UserId && !value.FDeleted) {
							$("#divComment").append(`
								<div class=" divBorder">
									<div style="font-size:large; margin:10px 0 0 10px">
										<div class="divComment" >
											${value.MemberName}	 ${value.PostingDate}
								<button type="button" class="btn btn-secondary btnEditComment" value="${value.FCommentId}">編輯</button>
								<button type="button" id="btnDeleteComment" class="btn btn-danger" value="${value.FCommentId}">刪除</button>
										</div>
										<hr style="margin:0"/>
										<div id="Container${value.FCommentId}">
											<div class="divComment" id="divComment${value.FCommentId}">
												${value.FCommentContent}
											</div>
										</div>
									</div>
								</div>`
							)
						}
						else {
							$("#divComment").append(`
								<div class=" divBorder">
									<div style="font-size:large; margin:10px 0 0 10px" >
										<div  class="divComment">
											${value.MemberName}	 ${value.PostingDate}
										</div>
										<hr style="margin:0"/>
										<div class="divComment">${value.FCommentContent}</div>
									</div>
								</div>`
							)
						}

					})
				},
				error: function (jqXHR, textStatus, errorThrown) {
				},
			})
		}
		//開始編輯評論，生成編輯textarea
		$(document).on('click', '.btnEditComment', function () {
			$(this).addClass("btnCommentCancel")
			$(this).removeClass("btnEditComment")
			$(this).html(`取消`)

			let commentId = $(this).attr("value")
			let text = $.trim($(`#divComment${commentId}`).text())
			$(`#Container${commentId}`).html(`
				<div class="divContainerRow">
					<div class="input-group">
						<textarea class="form-control divComment" id="FCommentContent" aria-label="With textarea">${text}</textarea>
					</div>
					<div>
						<button type="button" id="btnComment" class="btn btn-secondary" value="${commentId}">儲存</button>
					</div>
					<input type="hidden" id="hidden${commentId}" />
				</div>
			`)
			$(`#hidden${commentId}`).val(text)
			//alert($(`#hidden${commentId}`).val())
		});
		//取消編輯
		$(document).on('click', '.btnCommentCancel', function () {
			$(this).removeClass("btnCommentCancel")
			$(this).addClass("btnEditComment")
			$(this).html(`編輯`)
			//$(`F${commentId}`).removeClass("displayNone")

			let commentId = $(this).attr("value")
			let commentContent = $(`#hidden${commentId}`).attr("value");
			//alert(commentContent)
			$(`#Container${commentId}`).html(`
				<div class="divComment"  id="divComment${commentId}">${commentContent}</div>
			`)
		})

		//按鈕組時改變顏色
		$(document).on('click', '.btn-secondary', function () {
			$(this).removeClass('btn-secondary');
			$(this).addClass('btn-primary');
		});
		$(document).on('click', '.btn-primary', function () {
			$(this).removeClass('btn-primary');
			$(this).addClass('btn-secondary');
		});
		//送出評論
		$(document).on('click', '#btnComment', function () {
			let commentId = $(this).attr("value")
			let articleId = @Model.FArticleId
			let comment = $(`#FCommentContent`).val();
			$(`#FCommentContent`).val("");
			CommentDetail(commentId, articleId, comment, false)
		})
		//刪除評論
		$(document).on('click', '#btnDeleteComment', function () {
			let commentId = $(this).attr("value")
			let articleId = @Model.FArticleId
			let comment = "留言已刪除"
			let deleted = true
			confirm('你確定要刪除嗎？')
			CommentDetail(commentId, articleId, comment, deleted)
		})

		//點讚ajax
		function ArticleLike( FArticleId) {
			$.ajax({
				method: "post",
				url: "/TArticles/ArticleLike",
				data: { FArticleId },
				success: function (data) {
					let context = JSON.parse(data);
					$("#spanLikes").html(`${context.LikeCount}`)
				},
				error: function (jqXHR, textStatus, errorThrown) {
				},
			})
		}
		//點讚
		$(document).ready(function () {
			$(document).on('click', '#btnArticleLike', function () {
				var now = new Date().getTime();
				var lastClickedTime = $(this).data('clicked-time') || 0;
				var timeDiff = now - lastClickedTime;
				if (timeDiff > 1000) { // 如果距離上一次點擊的時間大於1秒，執行下面的代碼
					$(this).data('clicked-time', now); // 更新最後點擊時間
					// 执行按钮的操作
					let articleId = @Model.FArticleId
					ArticleLike(articleId)
				}
			});
		});

		//展示評論
		CommentDetail(0, @Model.FArticleId, "", false)

	</script>

}
